

# supprimer toutes les migrations du projet (etre dans le dossier courant du projet )
find . -path "*/migrations/*.py" -not -name "__init__.py" -delete
find . -path "*/migrations/*.pyc"  -delete


# Demarrer un cluster single node cockroachdb en local
cockroach start-single-node \
--insecure \
--store=node1 \
--listen-addr=localhost:26257 \
--http-addr=localhost:8888 \
--background

# cr√©er un reseau e pont pour les cluster dans docker
docker network create -d bridge roachnet

# en docker
docker run -d \
--name=jmdb \
--hostname=jmdb \
--net=roachnet \
-p 26257:26257 -p 8080:8080  \
-v "${PWD}/cockroach-data/jmdb:/cockroach/cockroach-data"  \
cockroachdb/cockroach:v21.1.6 start-single-node \
--insecure \

--join=roach1,roach2,roach3


# shell sql cockroachdb
cockroach sql --insecure --host=localhost:26257



var fd = new FormData();    
fd.append( 'file', input.files[0] );

$.ajax({
  url: 'http://example.com/script.php',
  data: fd,
  processData: false,
  contentType: false,
  type: 'POST',
  contentType: 'multipart/form-data', 
  mimeType: 'multipart/form-data', 
  headers: {
    "X-Requested-With": "XMLHttpRequest",
  }
  xhrFields: {
            withCredentials: true
        },
  success: function(data){
    alert(data);
  }
});







from django.contrib.admin.models import LogEntry, ADDITION, CHANGE, DELETION # these are action flags from the docs
LogEntry.objects.log_action(
        user_id=request.user.id,
        content_type_id=ContentType.objects.get_for_model(model_object).pk,
        object_repr=unicode(obj.title), #or any field you wish to represent here
        object_id=obj.id,
        message=message, # a new user has been added
        action_flag=ADDITION) # assuming it's a new object



faire le filter
graphe de caisse
liste des operations dans caisse et dans rapport



