

# supprimer toutes les migrations du projet (etre dans le dossier courant du projet )
find . -path "*/migrations/*.py" -not -name "__init__.py" -delete
find . -path "*/migrations/*.pyc"  -delete


# Demarrer un cluster single node cockroachdb en local
cockroach start-single-node \
--insecure \
--store=node1 \
--listen-addr=localhost:26257 \
--http-addr=localhost:8888 \
--background

# cr√©er un reseau e pont pour les cluster dans docker
docker network create -d bridge roachnet

# en docker
docker run -d \
--name=jmdb \
--hostname=jmdb \
--net=roachnet \
-p 26257:26257 -p 8080:8080  \
-v "${PWD}/cockroach-data/jmdb:/cockroach/cockroach-data"  \
cockroachdb/cockroach:v21.1.6 start-single-node \
--insecure \

--join=roach1,roach2,roach3


# shell sql cockroachdb
cockroach sql --insecure --host=localhost:26257



var fd = new FormData();    
fd.append( 'file', input.files[0] );

$.ajax({
  url: 'http://example.com/script.php',
  data: fd,
  processData: false,
  contentType: false,
  type: 'POST',
  contentType: 'multipart/form-data', 
  mimeType: 'multipart/form-data', 
  headers: {
    "X-Requested-With": "XMLHttpRequest",
  }
  xhrFields: {
            withCredentials: true
        },
  success: function(data){
    alert(data);
  }
});


def check_user_active(get_response):
    def middleware(request):
        response = get_response(request)
        if not request.path == "confirm":
            try:
                print(Cliente.objects.get(usuario_id=request.user.id))
            except Cliente.DoesNotExist:
                return redirect('confirm')
        return response
    return middleware




from django.urls import reverse

reverse('app1.view.view1')
If you want to find out URL and redirect to it, use redirect

from django.urls import redirect 

redirect('app1.view.view1')